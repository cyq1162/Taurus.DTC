V3.2.1 - 2024-01-10
----------------------------------------------------------
1、使用数据库=》分布式存储=》本地硬盘 三种方式顺序决定持久化，保障数据不丢失。
2、新增：支持数据库：MSSQL、MySql、Oracle、PostgreSql、Sybase、DB2、FireBird、Sqlite、DaMeng（达梦）、KingBaseES（人大金仓）等。
3、新增：支持消息队列：RabbitMQ、Kafka。
4、新增：支持分布式存储：Redis、MemCache。
5、新增：支持分布式锁：Redis锁、MemCache锁、Local本地锁、File本地文件锁。
6、优化：保障数据库、MQ服务挂掉及重启，程序不阻塞、流畅等待服务恢复后自动执行。
7、优化：使用交换机和多队列模式，保障任务及事务流畅。
8、优化：针对MQ增加单独版本发布版本，减少不必要的依赖。
9、优化：针对回调或方法订阅、采用分布式锁，保障一个即使并发情况下，使用端只执行1次。
10、优化：调试追踪的日志输出。（2024-01-00）
----------------------------------------------------------
V3.3.0 - 2024-01-29
1、移除：Client.PublishTaskAnsyc 发布任务模块（该功能将由Taurus.DTS 分布式任务调度组件实现，并支持延时任务和定时任务）。
2、优化：程序集获取。
3、优化：客户端Scan机制。
4、优化：服务端Scan机制。
5、优化：RabbitMQ 实现。
6、优化：队列名称。
7、优化：取消 Redis 存储。



----------------------------------------------------------

traceID 统一替换 ：号。

table from json-

4、并发测试，RpcTaskWorker
5、文本数据库并发测试

----------------------------------------------------------
还有交换机是绑定默认队列，还是所有队列  -OK，仅绑定默认

Client 增加回调设置：是用回调函数，还是用订阅模式？延时有点高，回调不太适合。 --OK，用订阅模式

3、接收事件优化 -- OK


数据库挂了：保存失败时，主备数据库，写文本数据库 -- 增加写文件来处理。 --OK

2、增加DTCMsg 来替代MQMsg  --OK，增加DTCClientCallBackPara

1、数据库扫描、增加分布式锁，保障只有1个在扫。 --OK ,
1、cyq.data 增加分布式锁类 --OK
OrmBase 空链接 或 错误链接----OK

2、纯文件，数据库不开时走通  -OK 
3、纯文件，扫描吗？

server 文件夹另外线程检测删除。
支持kafka队列。--------------------------- OK .
4、是否新增删除队列，把响应删除转到删除队列。--OK
新建.net工程。--OK
断点查看执行时间，为啥处理速度慢。--OK
3、思考插件怎么分拆。--OK
采用三队列、队列发送和接收放线程处理。--OK

